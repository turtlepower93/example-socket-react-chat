{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["socket","io","connect","App","useState","message","name","state","setState","chat","setChat","useEffect","on","onTextChange","e","target","value","onMessageSubmit","preventDefault","console","log","emit","className","onSubmit","onChange","onClick","map","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAAe,I,+BCKTA,EAASC,IAAGC,QAAQ,yBAEX,SAASC,IACtB,MAA0BC,mBAAS,CAAEC,QAAS,GAAIC,KAAM,KAAxD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WACRX,EAAOY,GAAG,WAAW,YAAsB,IAApBN,EAAmB,EAAnBA,KAAMD,EAAa,EAAbA,QAC3BK,EAAQ,GAAD,mBAAKD,GAAL,CAAW,CAACH,OAAMD,oBAI7B,IAAMQ,EAAe,SAAAC,GACnBN,EAAS,2BAAID,GAAL,kBAAaO,EAAEC,OAAOT,KAAOQ,EAAEC,OAAOC,UAG1CC,EAAkB,SAAAH,GACtBA,EAAEI,iBACF,IAAOZ,EAAiBC,EAAjBD,KAAMD,EAAWE,EAAXF,QACbc,QAAQC,IAAId,EAAMD,GAClBL,EAAOqB,KAAK,UAAW,CAACf,OAAMD,YAC9BG,EAAS,CAACH,QAAS,GAAIC,UAezB,OACE,sBAAKgB,UAAU,OAAf,UACE,uBAAMC,SAAUN,EAAhB,UACE,sBAAKK,UAAU,OAAf,UACE,2CACA,qBAAKA,UAAU,aAAf,SACE,uBACEhB,KAAK,OACLkB,SAAU,SAACV,GAAD,OAAOD,EAAaC,IAC9BE,MAAOT,EAAMD,SAGjB,8BACE,uBACEA,KAAK,UACLkB,SAAU,SAACV,GAAD,OAAOD,EAAaC,IAC9BE,MAAOT,EAAMF,eAInB,wBAAQoB,QAASR,EAAjB,6BAEF,sBAAKK,UAAU,cAAf,UACE,0CAhCFb,EAAKiB,KAAI,YAA4B,EAA1BpB,KAA0B,EAApBD,QAAoB,EAAXsB,eChChC,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7c23258e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport \"./App.css\";\n\nconst socket = io.connect(\"http://localhost:4000\");\n\nexport default function App() {\n  const [state, setState] = useState({ message: \"\", name: \"\" });\n  const [chat, setChat] = useState([]);\n\n  useEffect(() => {\n    socket.on('message', ({name, message}) => {\n      setChat([...chat, {name, message}])\n    })\n  })\n\n  const onTextChange = e => {\n    setState({...state, [e.target.name]: e.target.value})\n  }\n\n  const onMessageSubmit = e => {\n    e.preventDefault();\n    const {name, message} = state;\n    console.log(name, message)\n    socket.emit('message', {name, message})\n    setState({message: '', name})\n\n  }\n\n  const renderChat = () => {\n    return (\n      chat.map(({name, message, index}) => {\n        <div key={index}>\n          <h3>{name} <span>{message}</span></h3>\n        </div>\n      })\n    )\n  }\n\n\n  return (\n    <div className=\"Card\">\n      <form onSubmit={onMessageSubmit}>\n        <div className=\"Card\">\n          <h1>Messanger</h1>\n          <div className=\"name-field\">\n            <input\n              name=\"name\"\n              onChange={(e) => onTextChange(e)}\n              value={state.name}\n            ></input>\n          </div>\n          <div>\n            <input\n              name=\"message\"\n              onChange={(e) => onTextChange(e)}\n              value={state.message}\n            ></input>\n          </div>\n        </div>\n        <button onClick={onMessageSubmit}>Send message</button>\n      </form>\n      <div className=\"render-chat\">\n        <h1>Chat Log</h1>\n        {renderChat()}\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}